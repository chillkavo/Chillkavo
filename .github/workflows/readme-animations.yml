name: README Animations

on:
  schedule: [{ cron: "10 3 * * *" }]  # diario 03:10 Bogotá (evita solaparse con Snake)
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: readme-animations
  cancel-in-progress: true

jobs:
  build:
    if: github.event_name != 'push' || startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generar SVGs
        shell: bash
        run: |
          mkdir -p dist

          # --- typing banner ---
          cat > dist/typing-banner.svg <<'SVG'
          <svg xmlns="http://www.w3.org/2000/svg" width="800" height="120" viewBox="0 0 800 120">
            <defs>
              <style>
                .title{font:700 28px system-ui,-apple-system,Segoe UI,Roboto,Arial; fill:#7c3aed}
                .role{font:500 16px system-ui,-apple-system,Segoe UI,Roboto,Arial; fill:#0ea5e9}
                @media (prefers-color-scheme: dark){
                  .title{fill:#a78bfa}
                  .role{fill:#67e8f9}
                }
              </style>
            </defs>
            <text class="title" x="12" y="44">Santiago Contreras</text>
            <clipPath id="bandClip"><rect x="12" y="76" width="776" height="32" rx="6"/></clipPath>
            <g clip-path="url(#bandClip)" transform="translate(0,0)">
              <g id="track" transform="translate(0,0)">
                <text class="role" x="12" y="96">Java • Spring Boot • MySQL/Postgres • Selenium • SonarQube • React Native • TypeScript • Python • Node.js • </text>
                <text class="role" x="1400" y="96">Java • Spring Boot • MySQL/Postgres • Selenium • SonarQube • React Native • TypeScript • Python • Node.js • </text>
                <animateTransform attributeName="transform" type="translate" from="0 0" to="-1400 0" dur="18s" repeatCount="indefinite"/>
              </g>
            </g>
          </svg>
          SVG

          # --- orbit rings ---
          cat > dist/orbit.svg <<'SVG'
          <svg xmlns="http://www.w3.org/2000/svg" width="800" height="180" viewBox="0 0 800 180">
            <defs>
              <radialGradient id="planet">
                <stop offset="0" stop-color="#38bdf8" stop-opacity="0.95"/>
                <stop offset="1" stop-color="#8b5cf6" stop-opacity="0.95"/>
              </radialGradient>
              <style>
                .ring{ fill:none; stroke:#94a3b8; stroke-dasharray:3 6; opacity:.55 }
                @media (prefers-color-scheme: dark){ .ring{ stroke:#cbd5e1; opacity:.35 } }
              </style>
            </defs>
            <rect width="800" height="180" fill="transparent"/>
            <g transform="translate(400,90)">
              <circle r="32" fill="url(#planet)"/>
              <circle class="ring" r="45"/>
              <circle class="ring" r="70"/>
              <circle class="ring" r="85"/>
              <g><circle cx="45" cy="0" r="6" fill="#f89820"><title>Java</title></circle><animateTransform attributeName="transform" type="rotate" from="0" to="360" dur="8s" repeatCount="indefinite"/></g>
              <g><circle cx="45" cy="0" r="5" fill="#6DB33F"><title>Spring Boot</title></circle><animateTransform attributeName="transform" type="rotate" from="180" to="540" dur="8s" repeatCount="indefinite"/></g>
              <g><circle cx="70" cy="0" r="5" fill="#43B02A"><title>Selenium</title></circle><animateTransform attributeName="transform" type="rotate" from="90" to="450" dur="12s" repeatCount="indefinite"/></g>
              <g><circle cx="70" cy="0" r="6" fill="#61DAFB"><title>React Native</title></circle><animateTransform attributeName="transform" type="rotate" from="270" to="630" dur="12s" repeatCount="indefinite"/></g>
              <g><circle cx="85" cy="0" r="5" fill="#3178C6"><title>TypeScript</title></circle><animateTransform attributeName="transform" type="rotate" from="45" to="405" dur="16s" repeatCount="indefinite"/></g>
              <g><circle cx="85" cy="0" r="5" fill="#FFD43B"><title>Python</title></circle><animateTransform attributeName="transform" type="rotate" from="225" to="585" dur="16s" repeatCount="indefinite"/></g>
            </g>
          </svg>
          SVG

          # --- wave divider ---
          cat > dist/wave-divider.svg <<'SVG'
          <svg xmlns="http://www.w3.org/2000/svg" width="800" height="84" viewBox="0 0 800 84">
            <defs>
              <linearGradient id="gA" x1="0" y1="0" x2="1" y2="0"><stop offset="0" stop-color="#06b6d4"/><stop offset="1" stop-color="#8b5cf6"/></linearGradient>
              <linearGradient id="gB" x1="0" y1="0" x2="1" y2="0"><stop offset="0" stop-color="#22d3ee"/><stop offset="1" stop-color="#3b82f6"/></linearGradient>
              <pattern id="waveFast" patternUnits="userSpaceOnUse" width="240" height="84">
                <path d="M0,42 C60,12 180,72 240,42" fill="none" stroke="url(#gA)" stroke-width="3" stroke-linecap="round" stroke-linejoin="round" vector-effect="non-scaling-stroke"/>
                <animateTransform attributeName="patternTransform" type="translate" from="0 0" to="-240 0" dur="3.6s" repeatCount="indefinite"/>
              </pattern>
              <pattern id="waveSlow" patternUnits="userSpaceOnUse" width="240" height="84">
                <path d="M0,44 C60,18 180,66 240,44" fill="none" stroke="url(#gB)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="0.6" vector-effect="non-scaling-stroke"/>
                <animateTransform attributeName="patternTransform" type="translate" from="0 0" to="-240 0" dur="7.2s" repeatCount="indefinite"/>
              </pattern>
              <linearGradient id="edge" x1="0" y1="0" x2="1" y2="0"><stop offset="0" stop-color="#fff" stop-opacity="1"/><stop offset="0.985" stop-color="#fff" stop-opacity="1"/><stop offset="1" stop-color="#fff" stop-opacity="0"/></linearGradient>
              <mask id="edgeMask"><rect width="800" height="84" fill="url(#edge)"/></mask>
            </defs>
            <rect width="800" height="84" fill="transparent"/>
            <g mask="url(#edgeMask)">
              <rect width="800" height="84" fill="url(#waveSlow)"/>
              <rect width="800" height="84" fill="url(#waveFast)"/>
            </g>
          </svg>
          SVG

          # ====== Generador de encabezados (reusable) ======
          mk_heading () {
            local TEXT="$1" ; local CA="${2:-#22d3ee}" ; local CB="${3:-#8b5cf6}" ; local OUT="$4"
            cat > "dist/$OUT" <<SVG
<svg xmlns="http://www.w3.org/2000/svg" width="800" height="82" viewBox="0 0 800 82">
  <defs>
    <style>
      .t{font:700 22px system-ui,-apple-system,Segoe UI,Roboto,Arial; fill:#111827}
      @media (prefers-color-scheme: dark){ .t{fill:#e5e7eb} }
    </style>
    <linearGradient id="g" x1="0" y1="0" x2="1" y2="0">
      <stop offset="0" stop-color="${CA}"/>
      <stop offset="1" stop-color="${CB}"/>
    </linearGradient>
    <linearGradient id="shine" x1="0" y1="0" x2="1" y2="0">
      <stop offset="0" stop-color="#ffffff" stop-opacity="0"/>
      <stop offset="0.5" stop-color="#ffffff" stop-opacity="0.65"/>
      <stop offset="1" stop-color="#ffffff" stop-opacity="0"/>
    </linearGradient>
    <mask id="maskLine"><rect x="140" y="54" width="520" height="6" fill="#fff"/></mask>
  </defs>
  <text class="t" x="400" y="32" text-anchor="middle">${TEXT}</text>
  <rect x="140" y="54" width="520" height="6" rx="3" fill="url(#g)"/>
  <g mask="url(#maskLine)">
    <rect x="-220" y="54" width="200" height="6" fill="url(#shine)">
      <animate attributeName="x" from="-220" to="820" dur="3s" repeatCount="indefinite"/>
    </rect>
  </g>
</svg>
SVG
          }

          # === Generador encabezados ===
          mk_heading "Sobre mí" "#22d3ee" "#8b5cf6" "heading-sobre-mi.svg"
          mk_heading "Actualmente trabajando en" "#34d399" "#22d3ee" "heading-ahora.svg"
          mk_heading "Proyectos destacados" "#60a5fa" "#a78bfa" "heading-proyectos.svg"
          mk_heading "Cómo trabajo" "#f472b6" "#a78bfa" "heading-metodo.svg"

      - name: Publicar a rama output
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output
          build_dir: dist
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

